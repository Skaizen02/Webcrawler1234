myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
myCorpus <- lapply(myCorpus, stemCompletion2, dictionary=myCorpusCopy)
myCorpus <- lapply(myCorpus, as.character)
myCorpus <- Corpus(VectorSource(myCorpus))
replaceWord <- function(corpus, oldword, newword) {
tm_map(corpus, content_transformer(gsub), pattern=oldword, replacement=newword)
}
tdm <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1,Inf)))
findFreqTerms(tdm, lowfreq=10)
termFrequency <- rowSums(as.matrix(tdm))
termFrequency <- subset(termFrequency, termFrequency >= 10)
library(ggplot2)
freq.df <- data.frame(term=names(termFrequency), freq=termFrequency)
ggplot(freq.df, aes(x=term, y=freq)) + geom_bar(stat="identity") + xlab("Terms") + ylab("Count") + coord_flip()
m <- as.matrix(tdm)
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")[-(1:4)]
library(wordcloud)
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 3, random.order = F, colors = pal)
tdm <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1,Inf)))
findFreqTerms(tdm, lowfreq=10)
termFrequency <- rowSums(as.matrix(tdm))
termFrequency <- subset(termFrequency, termFrequency >= 10)
freq.df <- data.frame(term=names(termFrequency), freq=termFrequency)
m <- as.matrix(tdm)
word.freq <- sort(rowSums(m), decreasing = T)
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 3, random.order = F, colors = pal)
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 3, random.order = F, colors = pal)
library(tm)
myCorpus <- Corpus(VectorSource(df$text))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeURL))
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeNumPunct))
myStopwords <- c(stopwords("english"), "available", "via")
myStopwords <- setdiff(myStopwords, c("r", "big"))
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myCorpus <- tm_map(myCorpus, stripWhitespace)
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
myCorpus <- lapply(myCorpus, stemCompletion2, dictionary=myCorpusCopy)
myCorpus <- lapply(myCorpus, as.character)
myCorpus <- Corpus(VectorSource(myCorpus))
replaceWord <- function(corpus, oldword, newword) {
tm_map(corpus, content_transformer(gsub), pattern=oldword, replacement=newword)
}
tdm <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1,Inf)))
findFreqTerms(tdm, lowfreq=10)
termFrequency <- rowSums(as.matrix(tdm))
termFrequency <- subset(termFrequency, termFrequency >= 10)
library(ggplot2)
freq.df <- data.frame(term=names(termFrequency), freq=termFrequency)
ggplot(freq.df, aes(x=term, y=freq)) + geom_bar(stat="identity") + xlab("Terms") + ylab("Count") + coord_flip()
m <- as.matrix(tdm)
word.freq <- sort(rowSums(m), decreasing = T)
freq.df <- data.frame(term=names(termFrequency), freq=termFrequency)
View(freq.df)
df <- data.frame(matrix(unlist(DATA)))
df <- na.omit(df)
names(df)[1] = "titles"
View(df)
myCorpus <- Corpus(VectorSource(df$titles))
myCorpus <- Corpus(VectorSource(df$titles))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeURL))
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeNumPunct))
myStopwords <- c(stopwords("english"), "available", "via")
myStopwords <- setdiff(myStopwords, c("r", "big"))
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myCorpus <- tm_map(myCorpus, stripWhitespace)
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
myCorpus <- lapply(myCorpus, stemCompletion2, dictionary=myCorpusCopy)
myCorpus <- lapply(myCorpus, as.character)
myCorpus <- Corpus(VectorSource(myCorpus))
replaceWord <- function(corpus, oldword, newword) {
tm_map(corpus, content_transformer(gsub), pattern=oldword, replacement=newword)
}
tdm <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1,Inf)))
findFreqTerms(tdm, lowfreq=10)
termFrequency <- rowSums(as.matrix(tdm))
termFrequency <- subset(termFrequency, termFrequency >= 10)
library(ggplot2)
freq.df <- data.frame(term=names(termFrequency), freq=termFrequency)
ggplot(freq.df, aes(x=term, y=freq)) + geom_bar(stat="identity") + xlab("Terms") + ylab("Count") + coord_flip()
m <- as.matrix(tdm)
word.freq <- sort(rowSums(m), decreasing = T)
library(wordcloud)
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 3, random.order = F, colors = pal)
Rcrawler(Website = "https://www.finextra.com/", ExtractCSSPat = selector, DIR = "/pages", no_cores = 4, no_conn = 4)
df <- data.frame(matrix(unlist(DATA)))
df <- na.omit(df)
names(df)[1] = "titles"
library(tm)
myCorpus <- Corpus(VectorSource(df$titles))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeURL))
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeNumPunct))
myStopwords <- c(stopwords("english"), "available", "via")
myStopwords <- setdiff(myStopwords, c("r", "big"))
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myCorpus <- tm_map(myCorpus, stripWhitespace)
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
myCorpus <- lapply(myCorpus, stemCompletion2, dictionary=myCorpusCopy)
myCorpus <- lapply(myCorpus, as.character)
myCorpus <- Corpus(VectorSource(myCorpus))
replaceWord <- function(corpus, oldword, newword) {
tm_map(corpus, content_transformer(gsub), pattern=oldword, replacement=newword)
}
tdm <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1,Inf)))
findFreqTerms(tdm, lowfreq=10)
termFrequency <- rowSums(as.matrix(tdm))
termFrequency <- subset(termFrequency, termFrequency >= 10)
library(ggplot2)
m <- as.matrix(tdm)
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")[-(1:4)]
library(RColorBrewer)
library(wordcloud)
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 3, random.order = F, colors = pal)
pal <- brewer.pal(9, "BuGn")[-(1:4)]
dtm <- as.DocumentTermMatrix(tdm)
library(topicmodels)
lda <- LDA(dtm, k = 8)
term <- terms(lda, 7)
(term <- apply(term, MARGIN = 2, paste, collapse = ", "))
topics <- topics(lda)
topics <- data.frame(date=as.Date(df$created), topic=topics)
ggplot(topics, aes(date, fill = term[topic])) + geom_density(position = "stack")
dtm <- as.DocumentTermMatrix(tdm)
library(topicmodels)
lda <- LDA(dtm, k = 8)
term <- terms(lda, 7)
(term <- apply(term, MARGIN = 2, paste, collapse = ", "))
topics <- topics(lda)
topics <- data.frame(date=as.Date(df$created), topic=topics)
ggplot(topics, aes(x = topic, fill = term[topic])) + geom_bar()
topics <- topics(lda)
ggplot(topics, aes(x = topic, fill = term[topic])) + geom_bar()
topics <- data.frame(topic=topics)
ggplot(topics, aes(x = topic, fill = term[topic])) + geom_bar()
library(tm)
myCorpus <- Corpus(VectorSource(df$titles))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeURL))
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeNumPunct))
myStopwords <- c(stopwords("english"), "available", "via")
myStopwords <- setdiff(myStopwords, c("r", "big"))
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myCorpus <- tm_map(myCorpus, stripWhitespace)
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
myCorpus <- lapply(myCorpus, stemCompletion2, dictionary=myCorpusCopy)
myCorpus <- lapply(myCorpus, as.character)
myCorpus <- Corpus(VectorSource(myCorpus))
replaceWord <- function(corpus, oldword, newword) {
tm_map(corpus, content_transformer(gsub), pattern=oldword, replacement=newword)
}
tdm <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1,Inf)))
findFreqTerms(tdm, lowfreq=10)
library(RColorBrewer)
termFrequency <- rowSums(as.matrix(tdm))
termFrequency <- subset(termFrequency, termFrequency >= 10)
freq.df <- data.frame(term=names(termFrequency), freq=termFrequency)
m <- as.matrix(tdm)
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")[-(1:4)]
library(wordcloud)
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 3, random.order = F, colors = pal)
dtm <- as.DocumentTermMatrix(tdm)
library(topicmodels)
lda <- LDA(dtm, k = 8)
term <- terms(lda, 7)
(term <- apply(term, MARGIN = 2, paste, collapse = ", "))
topics <- topics(lda)
topics <- data.frame(topic=topics)
ggplot(topics, aes(x = topic, fill = term[topic])) + geom_bar()
library(tm)
myCorpus <- Corpus(VectorSource(df$titles))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeURL))
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeNumPunct))
myStopwords <- c(stopwords("english"), "available", "via")
myStopwords <- setdiff(myStopwords, c("r", "big"))
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myCorpus <- tm_map(myCorpus, stripWhitespace)
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
myCorpus <- lapply(myCorpus, stemCompletion2, dictionary=myCorpusCopy)
myCorpus <- lapply(myCorpus, as.character)
myCorpus <- Corpus(VectorSource(myCorpus))
replaceWord <- function(corpus, oldword, newword) {
tm_map(corpus, content_transformer(gsub), pattern=oldword, replacement=newword)
}
tdm <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1,Inf)))
findFreqTerms(tdm, lowfreq=10)
library(RColorBrewer)
termFrequency <- rowSums(as.matrix(tdm))
termFrequency <- subset(termFrequency, termFrequency >= 10)
freq.df <- data.frame(term=names(termFrequency), freq=termFrequency)
m <- as.matrix(tdm)
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")[-(1:4)]
library(wordcloud)
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 3, random.order = F, colors = pal)
dtm <- as.DocumentTermMatrix(tdm)
library(topicmodels)
lda <- LDA(dtm, k = 8)
term <- terms(lda, 7)
(term <- apply(term, MARGIN = 2, paste, collapse = ", "))
topics <- topics(lda)
topics <- data.frame(topic=topics)
ggplot(topics, aes(x = topic, fill = term[topic])) + geom_bar()
library(tm)
myCorpus <- Corpus(VectorSource(df$titles))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeURL))
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeNumPunct))
myStopwords <- c(stopwords("english"), "available", "via")
myStopwords <- setdiff(myStopwords, c("r", "big"))
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myCorpus <- tm_map(myCorpus, stripWhitespace)
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
myCorpus <- lapply(myCorpus, stemCompletion2, dictionary=myCorpusCopy)
myCorpus <- lapply(myCorpus, as.character)
myCorpus <- Corpus(VectorSource(myCorpus))
replaceWord <- function(corpus, oldword, newword) {
tm_map(corpus, content_transformer(gsub), pattern=oldword, replacement=newword)
}
tdm <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1,Inf)))
findFreqTerms(tdm, lowfreq=10)
library(RColorBrewer)
termFrequency <- rowSums(as.matrix(tdm))
termFrequency <- subset(termFrequency, termFrequency >= 10)
freq.df <- data.frame(term=names(termFrequency), freq=termFrequency)
m <- as.matrix(tdm)
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")[-(1:4)]
library(wordcloud)
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 3, random.order = F, colors = pal)
library(topicmodels)
dtm <- as.DocumentTermMatrix(tdm)
lda <- LDA(dtm, k = 8)
term <- terms(lda, 7)
(term <- apply(term, MARGIN = 2, paste, collapse = ", "))
topics <- topics(lda)
topics <- data.frame(topic=topics)
ggplot(topics, aes(x = topic, fill = term[topic])) + geom_bar()
term <- apply(term, MARGIN = 2, paste, collapse = ", ")
(term <- apply(term, MARGIN = 2, paste, collapse = ", "))
library(tm)
myCorpus <- Corpus(VectorSource(df$titles))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeURL))
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeNumPunct))
myStopwords <- c(stopwords("english"), "available", "via")
myStopwords <- setdiff(myStopwords, c("r", "big"))
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myCorpus <- tm_map(myCorpus, stripWhitespace)
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
myCorpus <- lapply(myCorpus, stemCompletion2, dictionary=myCorpusCopy)
myCorpus <- lapply(myCorpus, as.character)
myCorpus <- Corpus(VectorSource(myCorpus))
replaceWord <- function(corpus, oldword, newword) {
tm_map(corpus, content_transformer(gsub), pattern=oldword, replacement=newword)
}
tdm <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1,Inf)))
findFreqTerms(tdm, lowfreq=10)
library(RColorBrewer)
termFrequency <- rowSums(as.matrix(tdm))
termFrequency <- subset(termFrequency, termFrequency >= 10)
freq.df <- data.frame(term=names(termFrequency), freq=termFrequency)
m <- as.matrix(tdm)
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")[-(1:4)]
library(wordcloud)
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 3, random.order = F, colors = pal)
library(topicmodels)
dtm <- as.DocumentTermMatrix(tdm)
lda <- LDA(dtm, k = 8)
term <- terms(lda, 7)
term <- apply(term, MARGIN = 2, paste, collapse = ", ")
topics <- topics(lda)
topics <- data.frame(topic=topics)
ggplot(topics, aes(x = topic, fill = term[topic])) + geom_bar()
library(tm)
myCorpus <- Corpus(VectorSource(df$titles))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeURL))
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeNumPunct))
myStopwords <- c(stopwords("english"), "available", "via")
myStopwords <- setdiff(myStopwords, c("r", "big"))
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myCorpus <- tm_map(myCorpus, stripWhitespace)
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
myCorpus <- lapply(myCorpus, stemCompletion2, dictionary=myCorpusCopy)
myCorpus <- lapply(myCorpus, as.character)
myCorpus <- Corpus(VectorSource(myCorpus))
replaceWord <- function(corpus, oldword, newword) {
tm_map(corpus, content_transformer(gsub), pattern=oldword, replacement=newword)
}
tdm <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1,Inf)))
library(RColorBrewer)
termFrequency <- rowSums(as.matrix(tdm))
termFrequency <- subset(termFrequency, termFrequency >= 10)
freq.df <- data.frame(term=names(termFrequency), freq=termFrequency)
m <- as.matrix(tdm)
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")[-(1:4)]
library(wordcloud)
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 3, random.order = F, colors = pal)
library(topicmodels)
dtm <- as.DocumentTermMatrix(tdm)
lda <- LDA(dtm, k = 8)
term <- terms(lda, 7)
term <- apply(term, MARGIN = 2, paste, collapse = ", ")
topics <- topics(lda)
topics <- data.frame(topic=topics)
ggplot(topics, aes(x = topic, fill = term[topic])) + geom_bar()
library(tm)
myCorpus <- Corpus(VectorSource(df$titles))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeURL))
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeNumPunct))
myStopwords <- c(stopwords("english"), "available", "via")
myStopwords <- setdiff(myStopwords, c("r", "big"))
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myCorpus <- tm_map(myCorpus, stripWhitespace)
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
myCorpus <- lapply(myCorpus, stemCompletion2, dictionary=myCorpusCopy)
myCorpus <- lapply(myCorpus, as.character)
myCorpus <- Corpus(VectorSource(myCorpus))
replaceWord <- function(corpus, oldword, newword) {
tm_map(corpus, content_transformer(gsub), pattern=oldword, replacement=newword)
}
tdm <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1,Inf)))
library(RColorBrewer)
termFrequency <- rowSums(as.matrix(tdm))
termFrequency <- subset(termFrequency, termFrequency >= 10)
freq.df <- data.frame(term=names(termFrequency), freq=termFrequency)
m <- as.matrix(tdm)
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")[-(1:4)]
library(wordcloud)
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 3, random.order = F, colors = pal)
library(topicmodels)
dtm <- as.DocumentTermMatrix(tdm)
lda <- LDA(dtm, k = 15)
term <- terms(lda, 7)
term <- apply(term, MARGIN = 2, paste, collapse = ", ")
topics <- topics(lda)
topics <- data.frame(topic=topics)
ggplot(topics, aes(x = topic, fill = term[topic])) + geom_bar()
lda <- LDA(dtm, k = 10)
library(tm)
myCorpus <- Corpus(VectorSource(df$titles))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeURL))
removeNumPunct <- function(x) gsub("[^[:alpha:][:space:]]*", "", x)
myCorpus <- tm_map(myCorpus, content_transformer(removeNumPunct))
myStopwords <- c(stopwords("english"), "available", "via")
myStopwords <- setdiff(myStopwords, c("r", "big"))
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myCorpus <- tm_map(myCorpus, stripWhitespace)
myCorpusCopy <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
myCorpus <- lapply(myCorpus, stemCompletion2, dictionary=myCorpusCopy)
myCorpus <- lapply(myCorpus, as.character)
myCorpus <- Corpus(VectorSource(myCorpus))
replaceWord <- function(corpus, oldword, newword) {
tm_map(corpus, content_transformer(gsub), pattern=oldword, replacement=newword)
}
tdm <- TermDocumentMatrix(myCorpus, control=list(wordLengths=c(1,Inf)))
library(RColorBrewer)
termFrequency <- rowSums(as.matrix(tdm))
termFrequency <- subset(termFrequency, termFrequency >= 10)
freq.df <- data.frame(term=names(termFrequency), freq=termFrequency)
m <- as.matrix(tdm)
word.freq <- sort(rowSums(m), decreasing = T)
pal <- brewer.pal(9, "BuGn")[-(1:4)]
library(wordcloud)
wordcloud(words = names(word.freq), freq = word.freq, min.freq = 3, random.order = F, colors = pal)
library(topicmodels)
dtm <- as.DocumentTermMatrix(tdm)
lda <- LDA(dtm, k = 10)
term <- terms(lda, 7)
term <- apply(term, MARGIN = 2, paste, collapse = ", ")
topics <- topics(lda)
topics <- data.frame(topic=topics)
ggplot(topics, aes(x = topic, fill = term[topic])) + geom_bar()
View(df)
View(df)
#Write on the database
dbWriteTable(con, "titles", df)
#Connection to the database
con <- dbConnect(MySQL(), user="skaizen2", password="kzm38gw35f", dbname="webcrawler", host="localhost")
View(df)
#Write on the database
dbWriteTable(con, "titles", df)
#Write on the database
dbWriteTable(con, "titles", df, overWrite = TRUE)
#Write on the database
dbWriteTable(con, "titles", df, overWrite = TRUE)
#Write on the database
dbWriteTable(con, "titles", df, overwrite = TRUE)
#Write on the database
dbWriteTable(con, "titles", df, append = TRUE)
#Write on the database
dbWriteTable(con, "titles", df)
#Write on the database
dbWriteTable(con, "titles", df)
